<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Animation.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="HideAnimation.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>105, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8f/Z
</value>
  </data>
</root>